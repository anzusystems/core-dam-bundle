#!/bin/bash
# Script used to clear cache in the application container

PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)"
ARGS="$*"
AUTOLOAD=true

# Initialize default variables and functions and export all environment variables from application environment files
cd "${PROJECT_ROOT}" || exit 1
# Initialize default variables
# shellcheck disable=SC1091
. ./bin/docker-libvariables
# Initialize functions
# shellcheck disable=SC1091
. ./bin/docker-libfunctions
docker_env_vars

function help() {
    echo -en "$(printf %q "${BASH_SOURCE[0]}") [OPERATION] [OPTIONS]
    \nScript used to clear cache in the application container

    Options:
        --no-autoload Do not run dump-autoload, only clear cache folder and redis

    Examples:
        $(printf %q "${BASH_SOURCE[0]}") --no-autoload
    \n"
}

while [ "$#" -gt 0 ]; do
    case $1 in
    --no-autoload)
        AUTOLOAD=false
        shift 1
        continue
        ;;
    -h | --help)
        help
        exit
        ;;
    *)
        echo "[WARN] Unknown command line switch: $1" >&2
        help
        exit
        ;;
    esac
done

if [ -f /.dockerenv ]; then
    for env_file in ${ENV_APPLICATION_FILE_DIST} ${ENV_APPLICATION_FILE}; do
        if [ -f "$env_file" ]; then
            while read -r line; do export "${line?}"; done 2>/dev/null < <(grep -vE '^\s*(#|$)' "$env_file" | grep -E '^REDIS')
        fi
    done

    echo "[INFO] Cache clear"
    redis-cli -h "${REDIS_HOST}" -p "${REDIS_PORT}" -n "${REDIS_DB}" flushdb
    rm -rf var/cache/*

    if ${AUTOLOAD}; then
        echo "[INFO] Dump autoload command"
        composer dump-autoload
        bin/console cache:clear --env=test
    fi
    exit
fi

bin/docker-compose run --rm "${DOCKER_COMPOSE_SERVICE_NAME}" bash -c \'bin/cc "${ARGS}"\'
